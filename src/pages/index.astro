---
import MainLayout from '../layouts/MainLayout.astro';
import Card from '../components/Card.astro';
import { formatDate } from '../js/utils';

// Define the Post interface
interface Post {
    id: number;
    title?: string;
    body?: string;
    userId?: number;
    tags?: string[];
    reactions?: number;
}

// Fetch posts with error handling and caching
let posts = { posts: [] };
try {
    const response = await fetch('https://dummyjson.com/posts', {
        headers: {
            'Cache-Control': 'max-age=3600' // Cache for 1 hour
        }
    });
    if (!response.ok) throw new Error(`HTTP error! status: ${response.status}`);
    posts = await response.json();
} catch (error) {
    console.error('Error fetching posts:', error);
}
---


<MainLayout title="Welcome to Astro.">
	<main>
		<h1>Welcome to <span class="text-gradient">SteveG Blog</span></h1>
		<p class="instructions">
			BUILT WITH ASTRO:: <br />
			This should be deployed to github pages and to a remote web server.
			Content pulling from various remote dummy json sources. I am not responsible for any content.
			Please note, this is for tech demos only, I have not checked the site for accessibility issues (like bad color choices - still getting an 84 from lighthouse :D).
		</p>
		<ul role="list" class="link-card-grid">
			{posts.posts.map( 
				(post: Post, index: number) => {
					const randomDate = new Date(
						Math.floor((Math.random() * (2024-1970)) + 1970),
						Math.floor(Math.random() * 12),
						Math.floor(Math.random() * 30)
					);
					return (
						<a href={`${import.meta.env.BASE_URL}blog/posts/${post.id}`} title={`Link to Post${post.title}`}>
							<Card dark={index % 2 ? true : false}>
								<h3>{post.title}</h3>
								<div>Published (random made-up date): {formatDate(randomDate)}</div>
							</Card>
						</a>
					);
				}
			)}


		</ul>
	</main>
</MainLayout>

					<!--
						<Link
							href={`/posts?id=${post.id}`} 
							text={`${post.title}`}
  						style = "secondary"
  						isFilled = {true}
							borderVisible = {false}
						/>
					-->		

<style lang="scss">
@import "../styles/components/_instructions.scss";
</style>
